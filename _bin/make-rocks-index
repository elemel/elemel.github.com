#!/usr/bin/env lua

-- Copyright (c) 2008 Mikael Lind
-- 
-- Permission is hereby granted, free of charge, to any person
-- obtaining a copy of this software and associated documentation
-- files (the "Software"), to deal in the Software without
-- restriction, including without limitation the rights to use,
-- copy, modify, merge, publish, distribute, sublicense, and/or sell
-- copies of the Software, and to permit persons to whom the
-- Software is furnished to do so, subject to the following
-- conditions:
-- 
-- The above copyright notice and this permission notice shall be
-- included in all copies or substantial portions of the Software.
-- 
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-- EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-- OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-- NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
-- HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
-- WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-- FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
-- OTHER DEALINGS IN THE SOFTWARE.

function dirname(path)
    i = #path
    while i >= 1 and string.sub(path, i, i) ~= "/" do
        i = i - 1
    end
    if i == 0 then
        return "."
    else
        return string.sub(path, 1, i)
    end
end

if #arg ~= 1 then
    io.stderr:write("Usage: make-rocks-index <manifest>\n")
    os.exit(1)
end

ok, message = pcall(dofile, arg[1])
if not ok then
    io.stderr:write(string.format("make-rocks-index: cannot load manifest " ..
                                  "%q\n", arg[1]))
    io.stderr:write(message .. "\n")
    os.exit(1)
end

print([[---
layout: default
title: Rocks
---
]])

for name, versions in pairs(repository) do
    for version, _ in pairs(versions) do
        filename = string.format("%s-%s.rockspec", name, version)
        ok, message = pcall(dofile, dirname(arg[1]) .. "/" .. filename)
        if not ok then
            io.stderr:write(string.format("make-rocks-index: cannot load " ..
                                          "rockspec %q", filename))
            io.stderr:write(message .. "\n")
            os.exit(1)
        end
        print(string.format("\"%s %s\":/rocks/%s -- %s", name, version,
                            filename, description.summary))
    end
end
